Evolutionary Model

This approach is based on the idea of rapidly developing an initial software implementation from very abstract specifications 
and modifying this according to your appraisal. Each program version inherits the best features from earlier versions. 
Each version is refined based upon feedback from yourself to produce a system which satisfies your needs. 
At this point the system may be delivered or it may be re-implemented using a more structured approach to enhance robustness and maintainability. 
Specification, development and validation activities are concurrent with strong feedback between each. 


Strengths-
	Effective in rapidly producing small systems, software with short life spans, and developing sub-components of larger systems.
	
Weaknesses-
	It is difficult to measure progress and produce documentation reflecting every version of the system as it evolves. 
	This paradigm usually results in badly structured programs due to continual code modification. 
	
Types of projects and environments it suits-
	This is the only method appropriate for situations where a detailed system specification is unavailable.
	
Critical Factors-
	Production of good quality software using this method requires highly skilled and motivated programmers.